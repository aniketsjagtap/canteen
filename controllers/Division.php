<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Division extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Division_model');
    } 

	 /*
     * Listing of division
     */
    function index()
    {
       if ($this->auth->loggedin()) {
			$id = $this->auth->userid();
			if(!($this->User_model->hasPermission('read',$id)&&($this->User_model->hasPermission('division',$id)||$this->User_model->hasPermission('WILD_CARD',$id)))){
				show_error('You Don\'t have permission to perform this operation.');
				return false;
			}
			$user = $this->User_model->get('person_id', $id);
			unset($user['password']);
			
			$user_role = $this->User_model->loadRoles($user['person_id']);
					$this->data['user'] = $user['username'];
					$this->data['role'] = $user_role;
					$specialPerm =  $this->User_model->loadSpecialPermission($id);
					
					$this->data['pp'] = $specialPerm;
					 $this->data['division'] = $this->Division_model->get_all_division();
					 $this->data['p_role'] = $this->Person_role_model->get_person_role($id);
			$this->template
					->title('Welcome','My Aapp')
					->build('division/index',$this->data);
		}
		else{
			$this->template
					->title('Login Admin','Login Page')
					->set_layout('access')
					->build('access/login');
		}
    }

    /*
     * Adding a new division
     */
    function add()
    {   
		if($this->auth->loggedin()){
			$id = $this->auth->userid();
			if(!($this->User_model->hasPermission('add',$id)&&($this->User_model->hasPermission('division',$id)||$this->User_model->hasPermission('WILD_CARD',$id)))){
				show_error('You Don\'t have permission to perform this operation.');
				return false;
			}
			$this->form_validation->set_rules('name', '<b>Name</b>', 'trim|required|min_length[1]|max_length[100]');
			
			if(isset($_POST) && count($_POST) > 0 && $this->form_validation->run())     
			{   
				$params = array(
					'name' => $this->input->post('name'),
					'description' => $this->input->post('description'),
				);
				
				$division_id = $this->Division_model->add_division($params);
				redirect('division/index');
			}
			else
			{          
				$id = $this->auth->userid();
				$user = $this->User_model->get('person_id', $id);
				unset($user['password']);
				
				$user_role = $this->User_model->loadRoles($user['person_id']);
				
				$this->data['user'] = $user['username'];
				$this->data['role'] = $user_role;
				$specialPerm =  $this->User_model->loadSpecialPermission($id);
				$this->data['pp'] = $specialPerm;
				$this->data['p_role'] = $this->Person_role_model->get_person_role($id);
				
				$this->template
					->title('Welcome','My App')
					->build('division/add',$this->data);
			}
		}
		else{
			$this->template
					->title('Login Admin','Login Page')
					->set_layout('access')
					->build('access/login');
		}
    }  

    /*
     * Editing a division
     */
    function edit($div_id)
    {   
		if($this->auth->loggedin()){
			$id = $this->auth->userid();
			if(!($this->User_model->hasPermission('update',$id)&&($this->User_model->hasPermission('division',$id)||$this->User_model->hasPermission('WILD_CARD',$id)))){
				show_error('You Don\'t have permission to perform this operation.');
				return false;
			}
			// check if the division exists before trying to edit it
			$this->data['division'] = $this->Division_model->get_division($div_id);
			
			if(isset($this->data['division']['id']))
			{
				if(isset($_POST) && count($_POST) > 0)     
				{   
					$params = array(
						'name' => $this->input->post('name'),
						'description' => $this->input->post('description'),
					);

					$this->Division_model->update_division($div_id,$params);            
					redirect('division/index');
				}
				else
				{
					$id = $this->auth->userid();
					$user = $this->User_model->get('person_id', $id);
					unset($user['password']);
					
					$user_role = $this->User_model->loadRoles($user['person_id']);
					$this->data['user'] = $user['username'];
					$this->data['role'] = $user_role;
					$specialPerm =  $this->User_model->loadSpecialPermission($id);
					$this->data['p_role'] = $this->Person_role_model->get_person_role($id);
					
					$this->data['pp'] = $specialPerm;
					$this->template
						->title('Welcome','My Aapp')
						->build('division/edit',$this->data);
				}
			}
			else
				show_error('The division you are trying to edit does not exist.');
		}
		else
		{
			$this->template
					->title('Login Admin','Login Page')
					->set_layout('access')
					->build('access/login');
		}
    } 

    /*
     * Deleting division
     */
    function remove($div_id)
    {
		if($this->auth->loggedin()){
			$id = $this->auth->userid();
			if(!($this->User_model->hasPermission('delete',$id)&&($this->User_model->hasPermission('division',$id)||$this->User_model->hasPermission('WILD_CARD',$id)))){
				show_error('You Don\'t have permission to perform this operation.');
				return false;
			}
			$division = $this->Division_model->get_division($div_id);

			// check if the division exists before trying to delete it
			if(isset($division['id']))
			{
				$this->Division_model->delete_division($div_id);
				redirect('division/index');
			}
			else
            show_error('The division you are trying to delete does not exist.');
		}
		else{
			$this->template
					->title('Login Admin','Login Page')
					->set_layout('access')
					->build('access/login');
		}
	}
    
}
