<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Supplier extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Supplier_model');
        $this->load->model('Statu_model');
    } 

    /*
     * Listing of supplier
     */
    function index()
    {
		if ($this->auth->loggedin()) {
			$id = $this->auth->userid();
			if(!($this->User_model->hasPermission('read',$id)&&($this->User_model->hasPermission('supplier',$id)||$this->User_model->hasPermission('WILD_CARD',$id)))){
				show_error('You Don\'t have permission to perform this operation.');
				return false;
			}
			$user = $this->User_model->get('person_id', $id);
			unset($user['password']);
			
			$user_role = $this->User_model->loadRoles($user['person_id']);
					$this->data['user'] = $user['username'];
					$this->data['role'] = $user_role;
					$specialPerm =  $this->User_model->loadSpecialPermission($id);
					
					$this->data['pp'] = $specialPerm;
					 $this->data['p_role'] = $this->Person_role_model->get_person_role($id);
					 $this->data['supplier'] = $this->Supplier_model->get_all_status_supplier();
					 $this->data['status'] = $this->Statu_model->get_all_status();
					
			$this->template
					->title('Welcome','My Aapp')
					->build('supplier/index',$this->data);
		}
		else{
			$this->template
					->title('Login Admin','Login Page')
					->set_layout('access')
					->build('access/login');
		}
        
        
      
    }

    /*
     * Adding a new supplier
     */
    function add()
    {   
		if ($this->auth->loggedin()) {
			$id = $this->auth->userid();
			if(!($this->User_model->hasPermission('add',$id)&&($this->User_model->hasPermission('supplier',$id)||$this->User_model->hasPermission('WILD_CARD',$id)))){
				show_error('You Don\'t have permission to perform this operation.');
				return false;
			}
			$this->form_validation->set_rules('name', '<b>Supplier Name</b>', 'trim|required|min_length[1]|max_length[200]');
			$this->form_validation->set_rules('address', '<b>Address</b>', 'trim|required|min_length[1]|max_length[200]');
			$this->form_validation->set_rules('status_id', '<b>Status</b>', 'trim|required|min_length[1]|max_length[200]');
				
			if(isset($_POST) && count($_POST) > 0 && $this->form_validation->run())    
			{     
				$params = array(
					'name' => $this->input->post('name'),
					'address' => $this->input->post('address'),
					'Created' => time(),
					'Expire' => NULL,
					'status_id' => $this->input->post('status_id'),
				);
				
				$supplier_id = $this->Supplier_model->add_supplier($params);
				redirect('supplier/index');
			}
			else
			{     
				$user = $this->User_model->get('person_id', $id);
				unset($user['password']);
				
				$user_role = $this->User_model->loadRoles($user['person_id']);
					$this->data['user'] = $user['username'];
					$this->data['role'] = $user_role;
					$specialPerm =  $this->User_model->loadSpecialPermission($id);

					$this->data['pp'] = $specialPerm;
					$this->data['p_role'] = $this->Person_role_model->get_person_role($id);
					$this->data['supplier'] = $this->Supplier_model->get_all_supplier();
					$this->data['status'] = $this->Statu_model->get_all_status();
						
				$this->template
						->title('Welcome','My Aapp')
						->build('supplier/add',$this->data);
			}
			
		}
		else{
			$this->template
					->title('Login Admin','Login Page')
					->set_layout('access')
					->build('access/login');
		}
        
    }  

    /*
     * Editing a supplier
     */
    function edit($sup_id)
    {   
		if ($this->auth->loggedin()) {
			$id = $this->auth->userid();
			if(!($this->User_model->hasPermission('update',$id)&&($this->User_model->hasPermission('supplier',$id)||$this->User_model->hasPermission('WILD_CARD',$id)))){
				show_error('You Don\'t have permission to perform this operation.');
				return false;
			}
			// check if the supplier exists before trying to edit it
			$this->data['supplier'] = $this->Supplier_model->get_supplier($sup_id);
			
			if(isset($this->data['supplier']['id']))
			{
				$this->form_validation->set_rules('name', '<b>Supplier Name</b>', 'trim|required|min_length[1]|max_length[200]');
				$this->form_validation->set_rules('address', '<b>Address</b>', 'trim|required|min_length[1]|max_length[200]');
					
				if(isset($_POST) && count($_POST) > 0 && $this->form_validation->run())    
				{   
					$params = array(
						'name' => $this->input->post('name'),
						'address' => $this->input->post('address'),
						//'Created' => $this->input->post('Created'),
						//'Expire' => NULL,
						'status_id' => $this->input->post('status_id'),
					);

					$this->Supplier_model->update_supplier($sup_id,$params);            
					redirect('supplier/index');
				}
				else
				{
					$user = $this->User_model->get('person_id', $id);
					unset($user['password']);
					
					$user_role = $this->User_model->loadRoles($user['person_id']);
					$this->data['user'] = $user['username'];
					$this->data['role'] = $user_role;
					$specialPerm =  $this->User_model->loadSpecialPermission($id);
					
					$this->data['pp'] = $specialPerm;
					 $this->data['p_role'] = $this->Person_role_model->get_person_role($id);
					 $this->data['status'] = $this->Statu_model->get_all_status();
							
					$this->template
							->title('Welcome','My Aapp')
							->build('supplier/edit',$this->data);
				}
			}
			else
				show_error('The supplier you are trying to edit does not exist.');
		}else{
			$this->template
					->title('Login Admin','Login Page')
					->set_layout('access')
					->build('access/login');
		}
        
    } 

    /*
     * Deleting supplier
     */
    function remove($sup_id)
    {
		if ($this->auth->loggedin()) {
			$id = $this->auth->userid();
			if(!($this->User_model->hasPermission('delete',$id)&&($this->User_model->hasPermission('supplier',$id)||$this->User_model->hasPermission('WILD_CARD',$id)))){
				show_error('You Don\'t have permission to perform this operation.');
				return false;
			}
			$supplier = $this->Supplier_model->get_supplier($sup_id);

			// check if the supplier exists before trying to delete it
			if(isset($supplier['id']))
			{
				$params = array(
					'status_id' => '2',
				);
				$this->Supplier_model->delete_supplier($sup_id,$params);
				redirect('supplier/index');
			}
			else
				show_error('The supplier you are trying to delete does not exist.');
		}else{
			$this->template
					->title('Login Admin','Login Page')
					->set_layout('access')
					->build('access/login');
		}
    }
    
}
