<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Role_permission extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Role_permission_model');
    } 

    /*
     * Listing of role_permission
     */
    function index()
    {
        $data['role_permission'] = $this->Role_permission_model->get_all_role_permission();
        
        $data['_view'] = 'role_permission/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new role_permission
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'role_id' => $this->input->post('role_id'),
				'permission_id' => $this->input->post('permission_id'),
            );
            
            $role_permission_id = $this->Role_permission_model->add_role_permission($params);
            redirect('role_permission/index');
        }
        else
        {            
            $data['_view'] = 'role_permission/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a role_permission
     */
    function edit($)
    {   
        // check if the role_permission exists before trying to edit it
        $data['role_permission'] = $this->Role_permission_model->get_role_permission($);
        
        if(isset($data['role_permission']['']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'role_id' => $this->input->post('role_id'),
					'permission_id' => $this->input->post('permission_id'),
                );

                $this->Role_permission_model->update_role_permission($,$params);            
                redirect('role_permission/index');
            }
            else
            {
                $data['_view'] = 'role_permission/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The role_permission you are trying to edit does not exist.');
    } 

    /*
     * Deleting role_permission
     */
    function remove($)
    {
        $role_permission = $this->Role_permission_model->get_role_permission($);

        // check if the role_permission exists before trying to delete it
        if(isset($role_permission['']))
        {
            $this->Role_permission_model->delete_role_permission($);
            redirect('role_permission/index');
        }
        else
            show_error('The role_permission you are trying to delete does not exist.');
    }
    
}
