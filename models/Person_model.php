<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Person_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get person by person_id
     */
    function get_person($person_id)
    {
        return $this->db->get_where('person',array('person_id'=>$person_id))->row_array();
    }
        
    /*
     * Get all person
     */
    function get_all_status_person()
    {
        $this->db->order_by('location_id', 'desc');
        return $this->db->get('person')->result_array();
    }
	/*
     * Get all person
     */
    function get_all_person()
    {
        $this->db->order_by('location_id', 'desc');
        return $this->db->get_where('person',array('status_id ='=>'1'))->result_array();
    }
        
    /*
     * function to add new person
     */
    function add_person($params)
    {
		$params['password'] = $this->hash($params['password']);
        $this->db->insert('person',$params);
        return $this->db->insert_id();
    }
	
    public function hash($password) {
        $this->load->library('PasswordHash', array('iteration_count_log2' => 8, 'portable_hashes' => FALSE));
        
        // hash password
        return $this->passwordhash->HashPassword($password);
    }
    /*
     * function to update person
     */
    function update_person($person_id,$params)
    {
		$this->db->where('person_id',$person_id);
		// prevent overwriting with a blank password
        if (isset($params['password']) && $params['password']) {
           $params['password'] = $this->hash($params['password']);
        } else {
            unset($params['password']);
        }
       
		
		$params['registered'] = time();
        return $this->db->update('person',$params);
    }
    
    /*
     * function to delete person and person_role
     */
    function delete_person($person_id)
    {
		$params = $this->db->get_where('person',array('person_id'=>$person_id))->row_array();
		//var_dump($params);
		// prevent overwriting with a blank password
       if (isset($params['password']) && $params['password']) {
           $params['password'] = $this->hash($params['password']);
        } else {
            unset($params['password']);
        }
       
		
		//$params['status_id'] = '2';
		$this->db->where('person_id',$params['person_id']);
		//unset($params['person_id']);
        return $this->db->update('person', array('status_id' => '2'));
		// $this->db->delete('person_role',array('person_id'=>$person_id));
        // return $this->db->delete('person',array('person_id'=>$person_id));
    }
}
